package ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.UIManager;

import processor.Processor;
import utils.Utils;

/**
 *
 * @author Ioana
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     * @throws IOException 
     */
    public Frame() throws IOException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws IOException 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws IOException {

        Top_tag = new javax.swing.JLabel();
        Compute = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(590, 400));
        setResizable(false);
        getContentPane().setLayout(null);

        Top_tag.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        InputStream is = Frame.class.getResourceAsStream( "Terminal-Procedures.jpg" ) ;
        System.out.println(is==null);
        Top_tag.setIcon(new javax.swing.ImageIcon(ImageIO.read(is))); // NOI18N
        Top_tag.setText("For computation press the button");
        getContentPane().add(Top_tag);
        Top_tag.setBounds(0, 0, 400, 80);

        Compute.setText("Choose File");
        getContentPane().add(Compute);
        Compute.setBounds(290, 190, 120, 30);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 255, 204));
        jLabel2.setText("For computation press the button");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 190, 240, 30);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setIcon(new javax.swing.ImageIcon(ImageIO.read(Frame.class.getResourceAsStream( "4.jpg" ) ))); // NOI18N
        jLabel1.setText("For computation press the button");
        jLabel1.setMaximumSize(new java.awt.Dimension(600, 400));
        jLabel1.setMinimumSize(new java.awt.Dimension(600, 400));
        jLabel1.setPreferredSize(new java.awt.Dimension(600, 300));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -6, 600, 400);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2-240, dim.height/2-this.getSize().height/2-200);
        setTitle("Nominal Trajectory Builder");
        Compute.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.setCurrentDirectory(new File("D:\\"));
				fc.setDialogTitle("AIXM:5.1 DB xml file");
				fc.showOpenDialog(Compute);
				File selFile = fc.getSelectedFile();
				File mFile = null;
				while(!Utils.validateXmlFile(selFile)){
					JOptionPane.showMessageDialog(null, "Not an XML file!");
					fc.setSelectedFile(null);
					fc.showOpenDialog(Compute);
					selFile = fc.getSelectedFile();
				}

				File output = new File(selFile.getPath().replaceAll(".xml", "-generated") + ".xml");
				Processor proc = new Processor(selFile, output);
				Boolean wasError = false;
				try{
					proc.loadXml();
					proc.doMath();
					proc.writeXml();
				}
				catch(Exception ex) {
					wasError = true;
				}
				if(wasError) {
					JOptionPane.showMessageDialog(Compute,"Could not generate. Invalid File!", "Error",JOptionPane.ERROR_MESSAGE);
				}
				else{
					JOptionPane.showMessageDialog(null, "Succesfully generated output: " + output.getPath());
				}
				System.exit(0);
				
			}
		});
        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
        	UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
					new Frame().setVisible(true);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Compute;
    private javax.swing.JLabel Top_tag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration                   
}
